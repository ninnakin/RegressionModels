qnorm(0.975, x, sd/sqrt(n))
qnorm(0.025, x, sd/sqrt(n))
?rbin
?rbinom
u0 <- 50;
u1 <- 55;
n <- 100;
qbinom(0.05, n, 0.5)
qbinom(0.05, n, 0.5, lower.tail = FALSE)
dbinom(55, 100, 0.5)
dbinom(55:100, 100, 0.5)
sum(dbinom(55:100, 100, 0.5))
sum(dbinom(95:100, 100, 0.5))
sum(dbinom(85:100, 100, 0.5))
sum(dbinom(65:100, 100, 0.5))
sum(dbinom(60:100, 100, 0.5))
qbinom(0.05, n, 0.5, lower.tail = FALSE)
sum(dbinom(58:100, 100, 0.5))
sum(dbinom(59:100, 100, 0.5))
sum(dbinom(55:100, 100, 0.5))
pbinom(54, prob = .5, size = 100, lower.tail = FALSE)
u0 <- 420
u1 <- 15800/30
?rpois
lambda0 <- 1/u0
ppois(5, 0.2)
ppois(5, 0.4)
ppois(5, 5)
plot(rpois(1000, lambda0))
rpois(10, lambda0)
u0 <- 420
u1 <- 15800/30
plot(rpois(1000, u0))
replicate(10, rpois(30, u0))
mean(replicate(10, rpois(30, u0)))
apply(replicate(10, rpois(30, u0)),1,mean)
apply(replicate(10, rpois(30, u0)),2,mean)
hist(apply(replicate(1000, rpois(30, u0)),2,mean))
?ppois
ppois(u1, u1)
ppois(u0, u1)
u0 <- 520
u1 <- 15800/30
hist(apply(replicate(1000, rpois(30, u0)),2,mean))
ppois(u0, u1)
520 * 30
ppois(u0, u1, lower.tail = FALSE)
pv <- ppois(15800 - 1, lambda = 520 * 30, lower.tail = FALSE)
ppois(u0, lambda = u1, lower.tail = FALSE)
# wrong approach
# from answer:
pv <- ppois(15800 - 1, lambda = 520 * 30, lower.tail = FALSE)
hist(apply(replicate(1000, rpois(30, u0)),2,mean))
n <- 100
sd <- 4
u0 <- 10
u1 <- 11
se <- sd/sqrt(n)
(u0-u1)/se
se
(u1-u0)/se
pnorm((u1-u0)/se)
pnorm((u1-u0)/se, lower.tail = TRUE)
pnorm((u1-u0)/se, lower.tail = FALSE)
se <- sd*sqrt(2*1/n)
pnorm((u1-u0)/se, lower.tail = FALSE)
(u1-u0)/se
s * sqrt(1 / n + 1 / n)
sd * sqrt(1 / n + 1 / n)
pnorm(-abs(sd*sqrt(2*1/n)))
m1 <- 10; m2 <- 11
n1 <- n2 <- 100
s <- 4
se <- s * sqrt(1 / n1 + 1 / n2)
ts <- (m2 - m1) / se
(u1-u0)/se
pnorm(-abs(ts))
pnorm(-abs((u1-u0)/se))
2 * pnorm(-abs((u1-u0)/se))
u0 <- 10
u1 <- 11
s <- 4
n <- 100
se <- s/sqrt(n)
?rnorm
plot(rnorm(100, mean=10, sd = 4))
hist(rnorm(100, mean=10, sd = 4))
hist(replicate(100,rnorm(100, mean=10, sd = 4)))
hist(apply(replicate(100,rnorm(100, mean=10, sd = 4)),mean))
hist(apply(replicate(100,rnorm(100, mean=10, sd = 4)),1,mean))
hist(apply(replicate(1000,rnorm(100, mean=10, sd = 4)),1,mean))
hist(apply(replicate(1000,rnorm(100, mean=10, sd = 4)),2,mean))
hist(apply(replicate(1000,rnorm(100, mean=11, sd = 4)),2,mean))
points(apply(replicate(1000,rnorm(100, mean=10, sd = 4)),2,mean), type = "hist")
points(apply(replicate(1000,rnorm(100, mean=10, sd = 4)),2,mean), type = "h")
hist(apply(replicate(1000,rnorm(100, mean=11, sd = 4)),2,mean))
hist(apply(replicate(1000,rnorm(100, mean=11, sd = 4)),2,mean))
points(apply(replicate(1000,rnorm(100, mean=10, sd = 4)),2,mean), type = "h")
?type
?points
hist(apply(replicate(1000,rnorm(100, mean=11, sd = 4)),2,mean))
points(apply(replicate(1000,rnorm(100, mean=10, sd = 4)),2,mean), type = "h")
?qnorm
qnorm(0.025, u1, se)
pnorm((u1-u0)/se)
pnorm((u1-u0)/se, lower.tail = TRUE)
pnorm((u1-u0)/se, lower.tail = FALSE)
pnorm((u1-u0)/se, lower.tail = TRUE)
se
10 + qnorm(.95) * .4
u0+qnorm(0.95, mean=u0, sd=se)
se
qnorm(0.95, mean=u0, sd=se)
qnorm(0.95, mean=u0, sd=se)
pnorm(qnorm(0.95, mean=u0, sd=se), u1, sd=se)
# what is the probability that the mean of a distribution with u=11 is above this?
pnorm(qnorm(0.95, mean=u0, sd=se), u1, sd=se, lower.tail = TRUE)
# what is the probability that the mean of a distribution with u=11 is above this?
pnorm(qnorm(0.95, mean=u0, sd=se), u1, sd=se, lower.tail = FALSE)
u1 <- 0.01
u0 <- 0
s  <- 0.04
pnorm(qnorm(0.95, mean=u0, sd=s/100), u1, sd=s/100, lower.tail = FALSE)
n=100
pnorm(qnorm(0.95, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
n=99
pnorm(qnorm(0.95, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
n=95:104
pnorm(qnorm(0.95, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
(qnorm(.95) + qnorm(.8))
t.test(subset(mtcars, cyl==6)$mpg, subset(mtcars, cyl==8)$mpg, alternative = "two.sided", var.equal = TRUE)
n1 <- length(subset(mtcars, cyl==6)$mpg)
n2 <- length(subset(mtcars, cyl==8)$mpg)
u1 <- mean(subset(mtcars, cyl==6)$mpg)
u2 <- mean(subset(mtcars, cyl==8)$mpg)
se <- sd(subset(mtcars, cyl==6)$mpg)/sqrt(n1)+sd(subset(mtcars, cyl==6)$mpg)/sqrt(n2)
sd(subset(mtcars, cyl==6)$mpg)
sd(subset(mtcars, cyl==6)$mpg)
se <- sd(subset(mtcars, cyl==6)$mpg)/sqrt(n1)+sd(subset(mtcars, cyl==8)$mpg)/sqrt(n2)
pnorm((u2-u1)/se)
pnorm(abs((u2-u1)/se))
pnorm(abs((u2-u1)/se), lower.tail = FALSE)
se
p <- t.test(u2, u1, paired = FALSE, alternative="two.sided", var.equal=TRUE)$p.value
mixprob <- (n2 - 1) / (n2 + n1 - 2)
mpg8 <- mtcars$mpg[mtcars$cyl == 8]
mpg6 <- mtcars$mpg[mtcars$cyl == 6]
m8 <- mean(mpg8); m6 <- mean(mpg6)
rm(m1,m2)
rm(u0)
rm(n)
rm(ts)
rm(sd)
rm(s)
s8 <- sd(mpg8); s6 <- sd(mpg6)
sd(subset(mtcars, cyl==6)$mpg)
sd(subset(mtcars, cyl==8)
$mpg)
n8 <- length(mpg8); n6 <- length(mpg6)
p <- t.test(mpg8, mpg6, paired = FALSE, alternative="two.sided", var.equal=TRUE)$p.value
mixprob <- (n8 - 1) / (n8 + n6 - 2)
s <- sqrt(mixprob * s8 ^ 2  +  (1 - mixprob) * s6 ^ 2)
se <- sqrt(sd(subset(mtcars, cyl==6)$mpg)^2/n1+sd(subset(mtcars, cyl==8)$mpg)^2/n2)
se <- sqrt((sd(subset(mtcars, cyl==6)$mpg)^2)/n1+sd(subset(mtcars, cyl==8)$mpg)^2/n2)
(sd(subset(mtcars, cyl==8)$mpg)^2)/n2
(sd(subset(mtcars, cyl==6)$mpg)^2)/n1
s1 <- sd(subset(mtcars, cyl==6)$mpg)
s2 <- sd(subset(mtcars, cyl==8)$mpg)
se <- sqrt( s1^2/n1 + s2^2/n2 )
s <- sqrt(mixprob * s8 ^ 2  +  (1 - mixprob) * s6 ^ 2)
pnorm(abs((u2-u1)/se), lower.tail = FALSE)
s1^2
s2^2
s1^2/n1 + s2^2/n2
se <- sqrt( (s1^2)/n1 + (s2^2)/n2 )
s <- sqrt(mixprob * s8 ^ 2  +  (1 - mixprob) * s6 ^ 2)
s * sqrt(1 / n8 + 1 / n6)
z <- (m8 - m6) / (s * sqrt(1 / n8 + 1 / n6))
m8 - m6
abs((u2-u1)/se
)
pnorm(abs((u2-u1)/se))
pnorm(-abs((u2-u1)/se))
2*pnorm(-abs((u2-u1)/se))
z <- (m8 - m6) / (s * sqrt(1 / n8 + 1 / n6))
pz <- 2 * pnorm(-abs(z))
se <- sqrt( (s1^2)/(n1-1) + (s2^2)/(n2-1) )
(u2-u1)/se
2*pnorm(-abs((u2-u1)/se))
(u2-u1)/se
z
2*pnorm(-abs((u2-u1)/se))
pz
sp <- sqrt( ((n1-1)*s1^2 + (n2-1)*s2^2) / (n1+n2-2))
2*pnorm(-abs((u2-u1)/sp))
sp
u2-u1
(u2-u1)/(sp)
2*pnorm((u2-u1)/(sp*sqrt(1(n1+1/n2))))
1/n1+1/n2
sqrt(1/n1+1/n2)
sp*sqrt(1/n1+1/n2)
(u2-u1)/(sp*sqrt(1/n1+1/n2))
2*pnorm((u2-u1)/(sp*sqrt(1/n1+1/n2)))
w0 <- c(140, 138, 150, 148, 135)
w2 <- s(132, 135, 151, 146, 130)
rm(list=ls())
w0 <- c(140, 138, 150, 148, 135)
w2 <- c(132, 135, 151, 146, 130)
t.test(w0, w2, paired=TRUE, alternative = "two.sided")
t.test(w0, w2, paired=TRUE, alternative = "two.sided", var.equal = TRUE)
t.test(w0, w2, alternative = "two.sided", var.equal = TRUE)
t.test(w0, w2, paired=TRUE, alternative = "two.sided", var.equal = TRUE)
t.test(w2, w0, paired=TRUE, alternative = "two.sided", var.equal = TRUE)
?t.test
se <- sd/sqrt(n)
n  <- 9
sd <- 30
se <- sd/sqrt(n)
mu <- 1100
t.test(1)
pt(1)
pt(1, df=8)
pt(0, df=8)
n  <- 9
sd <- 30
se <- sd/sqrt(n)
mu <- 1100
mu0<-1000
t <- (mu-mu0)/se
pt(t, df=8)
pt(t, df=8, lower.tail = TRUE)
pt(t, df=8, lower.tail = FALSE)
2*pt(t, df=8, lower.tail = FALSE)
mu0=1100
2*pt(t, df=8, lower.tail = FALSE)
t <- (mu-mu0)/se
2*pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1050,1100,10)
t <- (mu-mu0)/se
2*pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1060,1070,1)
t <- (mu-mu0)/se
2*pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1060,1065,1)
t <- (mu-mu0)/se
2*pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1140,1145,1)
t <- (mu-mu0)/se
2*pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1140,1145,1)
t <- (mu-mu0)/se
2*pt(t, df=8, lower.tail = TRUE)
mu0 <- seq(1135,1140,1)
t <- (mu-mu0)/se
2*pt(t, df=8, lower.tail = TRUE)
mu0 <- seq(1060,1065,1)
t <- (mu-mu0)/se
pt(t, df=8, lower.tail = FALSE)
pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1080,1085,1)
t <- (mu-mu0)/se
pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1075,1080,1)
t <- (mu-mu0)/se
pt(t, df=8, lower.tail = FALSE)
mu0 <- seq(1120,1125,1)
t <- (mu-mu0)/se
pt(t, df=8, lower.tail = TRUE)
?fisher.test
fisher.test( c(3,1),alternative = "one.sided")
matrix(data = c(3,1,1,3), ncol=2)
fisher.test( d,alternative = "one.sided")
d <- matrix(data = c(3,1,1,3), ncol=2)
fisher.test( d,alternative = "one.sided")
d <- matrix(data = c(3,1), ncol=2)
fisher.test( d,alternative = "one.sided")
d <- matrix(data = c(3,1,1,3), ncol=2, dimnames = c("Prefer", "Don't prefer"))
d <- matrix(data = c(3,1,1,3), ncol=2,
dimnames = list(c("Prefer", "Don't prefer"),c("Coke", "Pepsi")))
d
fisher.test(d ,alternative = "greater")
fisher.test(d ,alternative = "less")
fisher.test(d ,alternative = "greater")
?pbinom
pbinom(1, 4, 0.5)
pbinom(2, 4, 0.5)
pbinom(2, 4, 0.5, lower.tail = TRUE)
pbinom(3, 4, 0.5, lower.tail = TRUE)
0.5^4
1-0.5^4
pbinom(3, 4, 0.5, lower.tail = TRUE)
pbinom(2, 4, 0.5, lower.tail = TRUE)
pbinom(2, 4, 0.5, lower.tail = FALSE)
10/1787*100
ppois(1,10/1787*100)
ppois(1,10/1787*100, lower.tail = TRUE)
ppois(1,10/1787*100, lower.tail = FALSE)
0.01*1787
ppois(0.01*1787,10, lower.tail = FALSE)
ppois(1,1.787, lower.tail = FALSE)
ppois(0.01*1787,10, lower.tail = FALSE)
0.01*1787
?ppois
ppois(10, 0.01*1787, lower.tail = FALSE)
ppois(10, 0.01*1787, lower.tail)
ppois(10, 0.01*1787)
qpois(0.01*1787)
qpois(0.05,0.01*1787)
qpois(0.04,0.01*1787)
qpois(0.03,0.01*1787)
ppois(10, lambda*n)
lamda = 0.01
n = 1787
ppois(10, lambda*n)
lambda = 0.01
n = 1787
ppois(10, lambda*n)
n1 <- 9; n2 <- 9;
n1 <- 9; n2 <- 9;
s1 <- 1.5; s2 <- 1.8;
s <- sqrt(s1^2/n1 + s2^2/n) # assuming equal variance in population
n1 <- 9; n2 <- 9;
s1 <- 1.5; s2 <- 1.8;
m1 <- -3; m2 <- 1;
t <- (m1-m2)/s
?dt
pt(t, n1+n2-2)
n1 <- 9; n2 <- 9;
s1 <- 1.5; s2 <- 1.8;
m1 <- -3; m2 <- 1;
s <- sqrt(s1^2/n1 + s2^2/n2)
s <- sqrt(s1^2/n1 + s2^2/n)
s <- sqrt(s1^2/n1 + s2^2/n2)
t <- (m1-m2)/s
pt(t, n1+n2-2)
2*pt(t, n1+n2-2)
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n <- (qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
qs <- seq(0.9,0.99,0.01)
qs <- seq(0.9,0.99,0.01)
u1 <- 0.01
u0 <- 0
s  <- 0.04
pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
plot(qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE))
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE))
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, ylabel="power")
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, y.lab="power")
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, ylab="power")
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, ylab="power", xlab="alpha")
library(swirl)
swirl()
library(swirl)
swirl()
sum(1:6*1/6)
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace=TRUE)
dim(sam)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, mean)
meds <- apply(resam, 1, median)
medain(fh)
median(fh)
median(fh)-median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(0.025, 0.975))
quantile(meds, c(0.025, 0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat()
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count-Cdata$count)
sample(group)
perms <- sapply(1:1000, function(i) testStat(BCcounts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms>obs)
testStat(DEcounts, group)
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
swirl()
ones <- rep(1, nrow(galton))
lm(chld~parent+ones-1,galton)
lm(child~parent+ones-1,galton)
lm(child~parent,galton)
lm(chld~1,galton)
lm(child~1,galton)
View(trees)
fit<-lm(Volume~Girth+Height+Constant-1,trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2<-lm(Volume~Height+Constant-1,trees2)
lapply(list(fit,fit2), coef)
setwd("~/Coursera/Regression models")
rm(list=ls())
data("mtcars")
head(mtcars)
?mtcars
plot(mpg)
plot(mpg, data=mtcars)
ggplot(mpg, data=mtcars)
library(ggplot2)
ggplot(mpg, data=mtcars)+geom_histogram()
ggplot(data=mtcars, aes(mpg))+geom_histogram()
ggplot(data=mtcars, aes(mpg))+geom_histogram(binwidth=100, fill="steelblue", col="darkblue")
ggplot(data=mtcars, aes(mpg))+geom_histogram(binwidth=1, fill="steelblue", col="darkblue")
ggplot(data=mtcars, aes(mpg))+geom_histogram(binwidth=1, fill="steelblue", col="darkblue")+facet_grid(.~am)
ggplot(data=mtcars, aes(x=mpg, y=am))+geom_boxplot()
ggplot(data=mtcars, aes(x=am, y=mpg))+geom_boxplot()
class(mtcars$am)
ggplot(data=mtcars, aes(x=as.factor(am), y=mpg))+geom_boxplot()
ggplot(data=mtcars, aes(x=as.factor(am), y=mpg))+geom_boxplot(geom_boxplot(fill="steel blue"))
ggplot(data=mtcars, aes(x=as.factor(am), y=mpg))+geom_boxplot(fill="steel blue")
mtcars$transmissions <- as.factor(mtcars$am)
levels(mtcars$transmissions)<-c("automatic","manual")
head(mtcars)
ggplot(data=mtcars, aes(x=transmissions, y=mpg))+geom_boxplot(fill="steel blue")
?mtcars
ggplot(data=mtcars, aes(mpg))+geom_histogram(binwidth=1, fill="steelblue", col="darkblue")+facet_grid(.~transmissions)
rm(list=ls())
data("mtcars")
mtcars$transmission <- as.factor(mtcars$am)
levels(mtcars$transmission)<-c("automatic","manual")
ggplot(data=mtcars, aes(mpg))+geom_histogram(binwidth=1, fill="steelblue", col="darkblue")+facet_grid(.~transmission)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(.~cyl)
summary(mtcars)
str(mtcars)
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(carb~cyl)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(carb~cyl)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(vs~cyl)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(gear~cyl)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(~.cyl)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(.~cyl)
lm(data=mtcars, mpg~transmission+cyl+disp+hp+wt+qseq+vs+gear+carb)
lm(data=mtcars, mpg~transmission+cyl+disp+hp+wt+qsec+vs+gear+carb)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$vs <- as.factor(mtcars$vs)
mtcars$gear <- as.factor(mtcars$gear)
lm(data=mtcars, mpg~transmission+cyl+disp+hp+wt+qsec+vs+gear+carb)
data("mtcars")
mtcars$transmission <- as.factor(mtcars$am)
levels(mtcars$transmission)<-c("automatic","manual")
mtcars$vs <- as.factor(mtcars$vs)
lm(data=mtcars, mpg~transmission+cyl+disp+hp+wt+qsec+vs+gear+carb)
coeffs<-lm(data=mtcars, mpg~transmission+cyl+disp+hp+wt+qsec+vs+gear+carb)$coeff
ggplot(aes(coeffs, names(coeffs)))+geom_bar(stat="identity")
ggplot(aes(coeffs, names(coeffs)))
barplot(aes(coeffs, names(coeffs)))
ggplot(aes(names(coeffs), coeffs))+geom_bar(stat="identity")
barplot(aes(names(coeffs), coeffs)
)
barplot(x=names(coeffs), y=coeffs)
coeffs
barplot(x=names(coeffs), y=as.numeric(coeffs))
barplot(as.numeric(coeffs))
barplot((coeffs))
ggplot(aes(coeffs))+geom_bar(stat="identity")
barplot(coeffs)
barplot(coeffs, col="salmon")
coeffs
coeffs[-1]
barplot(coeffs[-1], col="salmon")
mtcars$transm <- as.factor(mtcars$am)
levels(mtcars$transm)<-c("Automatic","Manual")
mtcars$vs <- as.factor(mtcars$vs)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(.~cyl)
barplot(coeffs[-1], col="salmon")
#regress against all variables to see which coefficients are the most important
coeffs<-lm(data=mtcars, mpg~transmission+cyl+disp+hp+wt+qsec+vs+gear+carb)$coeff
#largest impact is by weight, second largest by weight
barplot(coeffs[-1], col="salmon")
coeffs<-lm(data=mtcars, mpg~transm+cyl+disp+hp+wt+qsec+vs+gear+carb)$coeff
barplot(coeffs[-1], col="salmon")
barplot(abs(coeffs[-1]), col="salmon")
head(mtcars)
View(mtcars)
?mtcars
ggplot(mtcars, aes(mpg, carb))
ggplot(mtcars, aes(mpg, carb))+geom_points()
ggplot(mtcars, aes(mpg, carb))+geom_point()
ggplot(mtcars, aes(carb, mpg))+geom_point()
ggplot(mtcars, aes(gear, mpg))+geom_point()
mean(mtcars$mpg)
coeffs
mean(mtcars$mpg[mtcars$am==1])
mean(mtcars$mpg[mtcars$am==0])
